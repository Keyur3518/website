#!/usr/bin/env node

var sys = require("sys");

/* Helpers */

function printHelp() {
  sys.puts("Usage: pegjs-website [options]");
  sys.puts("");
  sys.puts("Runs the PEG.js website.");
  sys.puts("");
  sys.puts("Options:");
  sys.puts("  -e, --environment <environment>  environment the website will run in");
  sys.puts("                                   (default: development)");
  sys.puts("  -p, --port <port>                port to listen at (default: 3000)");
  sys.puts("  -h, --help                       print help and exit");
}

function exitSuccess() {
  process.exit(0);
}

function exitFailure() {
  process.exit(1);
}

function abort(message) {
  sys.error(message);
  exitFailure();
}

/* Arguments */

var args = process.argv.slice(2); // Trim "node" and the script path.

function isOption(arg) {
  return /^-/.test(arg);
}

function nextArg() {
  args.shift();
}

/* Main */

var environment = "development",
    port        = 3000;

while (args.length > 0 && isOption(args[0])) {
  switch (args[0]) {
    case "-p":
    case "--port":
      nextArg();
      if (args.length === 0) {
        abort("Missing parameter of the -p/--port option.");
      }
      if (!/[1-9][0-9]*/.test(args[0])) {
        abort("Parameter of the -p/--port option must be a positive integer.");
      }
      port = parseInt(args[0], 10);
      break;

    case "-e":
    case "--environment":
      nextArg();
      if (args.length === 0) {
        abort("Missing parameter of the -e/--environment option.");
      }
      environment = args[0];
      break;

    case "-h":
    case "--help":
      printHelp();
      exitSuccess();
      break;

    default:
      abort("Unknown option: " + args[0] + ".");
  }
  nextArg();
}

if (args.length > 0) {
  abort("Too many arguments.");
}

process.env.NODE_ENV = environment;
require("./app").listen(port);

console.log(
  "PEG.js website running on port %d in %s mode.",
  port,
  environment
);
